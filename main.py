import logging
import os
from dotenv import load_dotenv
from telegram.ext import Application, CommandHandler, MessageHandler, filters
from scheduler import start_scheduler

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
    handlers=[
        logging.FileHandler("bot.log", encoding="utf-8"),
        logging.StreamHandler()
    ]
)

# /start
async def start(update, context):
    await update.message.reply_text("ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")

# –õ—é–±—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
async def handle_message(update, context):
    await update.message.reply_text("Hello, R S! üëã\nI received your message!")

# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
application = Application.builder().token(BOT_TOKEN).build()

# –•–µ–Ω–¥–ª–µ—Ä—ã
application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
start_scheduler()

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    application.run_polling()
